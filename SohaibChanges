<<<<<<< HEAD
Changes made by Sohaib 20th November
-------------------------------------
=======
Added by Bruce 21-11-11

- Discuss with Bruce before any change to his files
	- It is a GROUP work. Everyone should agree the change [Well Bruce then maybe you shold show up to team meetings]
	- It is done by Bruce. It is his beloving work [Correction. This is everyones work, this is in contradiction to the point you made above]
	- Bruce might have a better idea [Yes! You might. But we won't get to know those ideas unless you come to team meetings.

- Legit Programming includes: [I am aware of the returning scenarios, I was unsure as to what flag meant what]
	- ALWAYS return something for function for indicating success or not. DO NOT MAKE VOID FUNCTION unless it is triggered by passing its pointer or system signla, e.g.k_scheduler, k_kb_iProcess
	- Therefore ALWAYS check the return value when you call a function. DO NOT just call the function. Use if to check the return value to see if the function is working.
	- Organize your code. Use 'if' to branch out all possibilities and make sure all branches return a value
	- Do not use do while loop & goto label. It is not suggested by standard.
	- Always initialize variables of values & struct. If it is a pointer, an initialization function should be provided/used.
	- More to be


Added by Sohaib 20th November

>>>>>>> d7db2485260e82e90ec79d75120be1737bde8395

- timer_iProcess
- k_null_processor
- k_release_processor
- Queue.c dePQ 
	~ Was coded with wrong ideas?
	~ Two cases where we call this proc 
		# CASE 1: Dequeue the FIRST PCB found process_switch does this
		# CASE 2: Dequeue this specific PCB from this queue e.g. remove from bq [DEBUGGING/MISSING CASES?]
- Added k_terminate
		# Copy the terminating procedure from main.c into this one
- Added k_process_switch 
- Added k_context_switch (WITHOUT CODE)
		# Context saving done by???
- Added k_request_delay ---- Ask TA if request delay ->timer iProc->process or timer-> request 											delay->process?
			- What do they mean by field being set to wakeup_code??? The integer? or the msg type = wakeup_code???
			- What to do with this int?
- Changed k_send_message 
	~ It now chekcs if recieving message was blocked_on_recieve, if it was then the message is dequeued from bq and added onto the
	  rq in the appropriate place
- Added k_change_priority 
	~ Ask TA if only the priority of processes that are "READY" is to be changed or can it be in the blocked queue as well?
	~ Change priority of running process allowed? Currently protects against that!

TODO:

- In initialization, setup SIGALAM via ualarm () and map SIGALARM to k_timer_iProcess


NOTES:

- Decide on returning standard...return 1 or 0? 1 for success? 0 for failure?
-k_process_switch implementation: send in a pcb if we want to switch to a particular one
	- Send in null when we want to dequeue????? 

- Should process_switch be k_process_switch??? kernel accessible only?



Changes Made by Sohaib November 21st, 2011
------------------------------------------

- Added tuple data structure {pid, procStat, priority} (global.h)
	~ ProcTuple is a dynamic array of the tuple data structure

- Added queueSize (PCBQueue *pq) function to queue.c 
	~ Goes through all the levels in a priority queue and returns the total number of processes in the entire queue

- Added k_request_process_status
	~ Creates a new tuple
	~ Goes through kernel ready and blocked queues and populates tuple
	~ Does a k_send_message to return the tuple
	
- Added a pointer to a TUPLE in MsgENV (we need to return it in the envelope)










